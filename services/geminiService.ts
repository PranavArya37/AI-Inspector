
import { GoogleGenAI, Type } from "@google/genai";
import type { AnalysisResult } from '../types';

const API_KEY = process.env.API_KEY;

if (!API_KEY) {
  throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });

const analysisSchema = {
  type: Type.OBJECT,
  properties: {
    is_ai_generated: {
      type: Type.BOOLEAN,
      description: "True if the image is determined to be AI-generated, otherwise false."
    },
    confidence_score: {
      type: Type.NUMBER,
      description: "A score from 0 to 100 representing the confidence in the determination."
    },
    analysis_report: {
      type: Type.STRING,
      description: "A detailed report explaining the reasoning behind the determination, pointing out specific artifacts or characteristics found in the image."
    }
  },
  required: ["is_ai_generated", "confidence_score", "analysis_report"]
};


export const analyzeImage = async (base64Image: string, mimeType: string): Promise<AnalysisResult> => {
  try {
    const response = await ai.models.generateContent({
      model: 'gemini-2.5-flash',
      contents: {
        parts: [
          {
            text: `
              You are an expert AI image inspector. Analyze the provided image to determine if it was generated by an AI.
              Look for common AI-generated artifacts such as unnatural textures, inconsistent lighting, distorted features (especially on hands and faces), impossible geometry, and other subtle clues.
              Provide your analysis based on the provided JSON schema.
            `
          },
          {
            inlineData: {
              data: base64Image,
              mimeType: mimeType,
            },
          },
        ],
      },
      config: {
        responseMimeType: 'application/json',
        responseSchema: analysisSchema,
      }
    });

    const jsonString = response.text.trim();
    const result = JSON.parse(jsonString);
    
    // Basic validation
    if (typeof result.is_ai_generated !== 'boolean' || typeof result.confidence_score !== 'number' || typeof result.analysis_report !== 'string') {
        throw new Error("Invalid response format from API");
    }

    return result as AnalysisResult;

  } catch (error) {
    console.error("Error analyzing image with Gemini API:", error);
    throw new Error("Failed to get analysis from Gemini API.");
  }
};
